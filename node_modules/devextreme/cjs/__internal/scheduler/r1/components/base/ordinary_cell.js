/**
 * DevExtreme (cjs/__internal/scheduler/r1/components/base/ordinary_cell.js)
 * Version: 23.2.6
 * Build date: Wed May 01 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OrdinaryCellDefaultProps = exports.OrdinaryCell = void 0;
var _inferno = require("inferno");
var _inferno2 = require("@devextreme/runtime/inferno");

function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    _setPrototypeOf(subClass, superClass)
}

function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o, p) {
        o.__proto__ = p;
        return o
    };
    return _setPrototypeOf(o, p)
}
const OrdinaryCellDefaultProps = {};
exports.OrdinaryCellDefaultProps = OrdinaryCellDefaultProps;
let OrdinaryCell = function(_BaseInfernoComponent) {
    _inheritsLoose(OrdinaryCell, _BaseInfernoComponent);

    function OrdinaryCell() {
        return _BaseInfernoComponent.apply(this, arguments) || this
    }
    var _proto = OrdinaryCell.prototype;
    _proto.render = function() {
        const {
            children: children,
            className: className,
            colSpan: colSpan,
            styles: styles
        } = this.props;
        return (0, _inferno.createVNode)(1, "td", className, children, 0, {
            style: (0, _inferno2.normalizeStyles)(styles),
            colSpan: colSpan
        })
    };
    return OrdinaryCell
}(_inferno2.BaseInfernoComponent);
exports.OrdinaryCell = OrdinaryCell;
OrdinaryCell.defaultProps = OrdinaryCellDefaultProps;
